name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    
    - name: Build
      run: cargo build --verbose
      
    - name: Run tests
      run: cargo test --verbose

    - name: Rename binary
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv ./target/debug/e4e-data-management-rust.exe ./target/debug/e4e-data-management-rust-${{ matrix.os }}.exe
        else
          mv ./target/debug/e4e-data-management-rust ./target/debug/e4e-data-management-rust-${{ matrix.os }}
        fi
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact-${{ matrix.os }}
        path: ./target/debug/e4e-data-management-rust-${{ matrix.os }}*

  release: 
    runs-on: ubuntu-latest
    needs: [build]
    steps:
     - name: Download artifacts
       uses: actions/download-artifact@v3
       with: 
        path: dist

     - name: List directory contents
       run: ls -r dist

     - name: Create release
       uses: softprops/action-gh-release@v1
       with:
         name: Test release ${{ github.sha }}
         tag_name: v0.1.1
         files: |
           ./dist/my-artifact-macos-latest
           ./dist/my-artifact-windows-latest
           ./dist/my-artifact-ubuntu-latest

    
